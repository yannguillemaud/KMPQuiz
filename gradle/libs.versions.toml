[versions]
kcronCommon = "0.27.4"
kotlin = "2.2.10"
kotlin-coroutines = "1.10.2"
kotlin-serialization-json = "1.9.0"

agp = "8.12.1"
compose = "1.9.0"
composeMultiplateform = "1.8.2"
androidx-lifecycle = "2.9.2"
composeHotReload = "1.0.0-beta05"

koin = "4.1.0"
kermit = "2.0.8"

ktor = "3.2.3"
material3Android = "1.3.2"
mockk = "1.14.5"
ksp = "2.1.21-2.0.2"

# DATABASE
postgresqlVersion = "42.7.7"
exposedVersion = "0.61.0"
hikaricpVersion = "7.0.2"
workRuntimeKtx = "2.10.3"


[libraries]
androidx-activity-compose = { module = "androidx.activity:activity-compose", version = "1.10.1" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

androidx-material3-android = { group = "androidx.compose.material3", name = "material3-android", version.ref = "material3Android" }

androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "workRuntimeKtx" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }

# DATABASE
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposedVersion" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposedVersion" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposedVersion" }
hikaricp = { module = "com.zaxxer:HikariCP", version.ref = "hikaricpVersion" }

# KOIN
koin-core = {module = "io.insert-koin:koin-core", version.ref = "koin"}
koin-ktor = {module = "io.insert-koin:koin-ktor", version.ref = "koin"}
koin-android = {module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose-viewmodel = {module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }
koin-compose-viewmodel-nav = {module = "io.insert-koin:koin-compose-viewmodel-navigation", version.ref = "koin" }
koin-androidx-workmanager = { module = "io.insert-koin:koin-androidx-workmanager", version.ref = "koin" }

kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }

kcron-common = { module = "com.ucasoft.kcron:kcron-common", version.ref = "kcronCommon" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlin-coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlin-serialization-json" }  # Référence corrigée
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.7.1" }

ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor"}
ktor-server-status-page = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor"}
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
koin-logger-slf4j = { module = "io.insert-koin:koin-logger-slf4j", version.ref = "koin" }

mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresqlVersion" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
composeHotReload = { id = "org.jetbrains.compose.hot-reload", version.ref = "composeHotReload"}
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplateform" }

ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }